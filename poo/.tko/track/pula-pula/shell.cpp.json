{
    "patches": [
        {
            "label": "2025-02-23_23-59-20",
            "content": "@@ -373,31 +373,31 @@\n     \n-string name;%0A    int ag\n+int age;%0A    string nam\n e;%0A%0A\n"
        },
        {
            "label": "2025-02-23_23-59-42",
            "content": "@@ -66,17 +66,16 @@\n  %3Clist%3E%0A\n-%0A\n using na\n@@ -363,17 +363,16 @@\n lass Kid\n- \n %7B%0A    st\n@@ -456,17 +456,16 @@\n age(age)\n- \n %7B%7D%0A%0A    \n@@ -516,21 +516,16 @@\n ;%0A    %7D%0A\n-    %0A\n     int \n@@ -532,23 +532,16 @@\n getAge()\n- const \n %7B%0A      \n@@ -556,25 +556,24 @@\n  age;%0A    %7D%0A\n-%0A\n     string s\n@@ -577,21 +577,16 @@\n g str() \n-const\n  %7B%0A     \n@@ -666,24 +666,25 @@\n tr();%0A    %7D%0A\n+%0A\n %7D;%0A%0Aclass Tr\n@@ -691,17 +691,16 @@\n ampoline\n- \n %7B%0A    li\n@@ -729,16 +729,17 @@\n ist%3CKid%3E\n+ \n  waiting\n@@ -768,16 +768,17 @@\n ine() %7B%7D\n+;\n %0A%0A    vo\n@@ -795,17 +795,16 @@\n Kid kid)\n- \n %7B       \n@@ -859,17 +859,16 @@\n  enter()\n- \n %7B%0A      \n@@ -875,19 +875,17 @@\n   if\n- (!\n+(\n waiting.\n empt\n@@ -876,33 +876,35 @@\n  if(waiting.\n-empty()) \n+size() %3E 0)\n %7B%0A          \n@@ -995,427 +995,24 @@\n  %7D%0A%0A\n-    void leave() %7B%0A        if (!playing.empty()) %7B%0A            playing.pop_front();%0A        %7D%0A    %7D%0A%0A    void show() %7B%0A        cout %3C%3C %22%5B%22%0A             %3C%3C map_join(waiting, %5B%5D(const Kid& kid) %7B return kid.str(); %7D, %22, %22)%0A             %3C%3C %22%5D =%3E %5B%22%0A             %3C%3C map_join(playing, %5B%5D(const Kid& kid) %7B return kid.str(); %7D, %22, %22)%0A             %3C%3C %22%5D%22%0A             %3C%3C endl;%0A    %7D%0A%7D;%0A%0Aint main() %7B%0A    Trampoline trampoline;\n+%7D;%0A%0Aint main() %7B\n %0A%0A  \n@@ -1258,39 +1258,8 @@\n ) %7B%0A\n-            trampoline.show();%0A\n     \n@@ -1299,24 +1299,27 @@\n %0A           \n+ //\n  string name\n@@ -1331,16 +1331,19 @@\n         \n+ //\n  int age\n@@ -1351,24 +1351,27 @@\n %0A           \n+ //\n  ss %3E%3E name \n@@ -1382,55 +1382,8 @@\n ge;%0A\n-            trampoline.arrive(Kid(name, age));%0A\n     \n@@ -1419,40 +1419,8 @@\n ) %7B%0A\n-            trampoline.enter();%0A\n     \n@@ -1464,30 +1464,91 @@\n     \n-    trampoline.leave()\n+%7D else if (cmd == %22remove%22) %7B%0A            // string name;%0A            // ss %3E%3E name\n ;%0A  \n"
        },
        {
            "label": "2025-02-24_15-10-37",
            "content": "@@ -849,45 +849,18 @@\n ush_\n-front\n+back\n (kid);\n- // Agora insere no in%C3%ADcio\n %0A   \n"
        },
        {
            "label": "2025-02-24_15-12-02",
            "content": "@@ -856,16 +856,42 @@\n nt(kid);\n+ // Agora insere no in%C3%ADcio\n %0A    %7D%0A%0A\n@@ -979,20 +979,21 @@\n waiting.\n-back\n+front\n ());%0A   \n@@ -1013,20 +1013,21 @@\n ing.pop_\n-back\n+front\n ();%0A    \n@@ -1037,21 +1037,16 @@\n  %7D%0A    %7D\n-%0A    \n %0A%0A    vo\n"
        },
        {
            "label": "2025-02-24_15-15-06",
            "content": "#include <iostream>\n#include <memory>\n#include <sstream>\n#include <list>\n\nusing namespace std;\n\ntemplate<class CONTAINER, class FUNC>\nstring map_join(const CONTAINER& c, FUNC f, string sep) {\n    stringstream ss;\n    for (auto it = c.begin(); it != c.end(); it++) {\n        ss << (it == c.begin() ? \"\" : sep);\n        ss << f(*it);\n    }\n    return ss.str();\n}\n\nclass Kid {\n    string name;\n    int age;\n\npublic:\n    Kid(string name, int age) : name(name), age(age) {}\n\n    string getName() const {\n        return name;\n    }\n    \n    int getAge() const {\n        return age;\n    }\n\n    string str() const {\n        stringstream ss;\n        ss << name << \":\" << age;\n        return ss.str();\n    }\n};\n\nclass Trampoline {\n    list<Kid> playing;\n    list<Kid> waiting;\n\npublic:\n    Trampoline() {}\n\n    void arrive(Kid kid) {       \n        waiting.push_front(kid);\n    }\n\n    void enter() {\n        if (!waiting.empty()) {\n            playing.push_back(waiting.back());\n            waiting.pop_back();\n        }\n    }\n    \n\n    void leave() {\n        if (!playing.empty()) {\n            playing.pop_front();\n        }\n    }\n\n    void show() {\n        cout << \"[\"\n             << map_join(waiting, [](const Kid& kid) { return kid.str(); }, \", \")\n             << \"] => [\"\n             << map_join(playing, [](const Kid& kid) { return kid.str(); }, \", \")\n             << \"]\"\n             << endl;\n    }\n};\n\nint main() {\n    Trampoline trampoline;\n\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;\n        } else if (cmd == \"show\") {\n            trampoline.show();\n        } else if (cmd == \"arrive\") {\n            string name;\n            int age;\n            ss >> name >> age;\n            trampoline.arrive(Kid(name, age));\n        } else if (cmd == \"enter\") {\n            trampoline.enter();\n        } else if (cmd == \"leave\") {\n            trampoline.leave();\n        } else {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n}\n"
        }
    ]
}