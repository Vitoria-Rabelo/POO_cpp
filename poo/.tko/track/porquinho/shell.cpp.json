{
    "patches": [
        {
            "label": "2025-02-27_10-58-46",
            "content": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <utility>\n#include <iomanip>\n#include <memory>\nusing namespace std;\n\ntemplate <typename CONTAINER, typename FN>\nstring map_join(const CONTAINER& container, FN fn, string sep = \", \", string prefix = \"[\", string suffix = \"]\") {\n    stringstream ss;\n    for (auto it = container.begin(); it != container.end(); ++it) {\n        ss << (it != container.begin() ? sep : \"\") << fn(*it);\n    }\n    return prefix + ss.str() + suffix;\n}\n\nint main() {\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;\n        } else if (cmd == \"init\") {\n            // int volumeMax;\n            // ss >> volumeMax;\n        } else if (cmd == \"show\") {\n        } else if (cmd == \"break\") {\n        } else if (cmd == \"addCoin\") {\n            // string label;\n            // ss >> label;\n        } else if (cmd == \"addItem\") {\n            // string label;\n            // int volume;\n            // ss >> label >> volume;\n        } else if (cmd == \"extractItems\") {\n            // Obtenha os itens com o m\u00e9todo extractItems\n            // e imprima os itens obtidos\n        } else if (cmd == \"extractCoins\") {\n            // Obtenha as moedas com o m\u00e9todo extractCoins\n            // e imprima as moedas obtidas\n        } else {\n            cout << \"fail: invalid command\\n\";\n        }\n    }\n}\n"
        }
    ]
}